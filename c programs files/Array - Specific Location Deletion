// P // This is a program to Delete an element from an Array from particular location.
// A // Basic Algorithm is to ask the position of element from user and then shifting the elements ahead till that location, deleting an element at that position.

// 1 // Firstly include the header files into our program.
// P //
#include <stdio.h>

// 2 // Now we give the Function Prototype of our "delete()".
// P // void delete();
void delete();

// 3 // Initializing Global variables i.e. with the scope all over the program.
// int numbers[50] - Initialise an array named "numbers" which can contain upto 50 elements.
// size - Variable used for storing number of elements we want to enter.
// item - An element that is to be deleted.
// loc - To store the location from where we want to delete the element.
// P //
int numbers[50], size, loc, item;

// 4 // main function with Int as return type and no arguments and Now we will work inside Main()
// P // int main(void) { return 0; }
int main(void) {
    
    // 5 // Initialize i to 0 - To be used in Loop
    // P //
    int i = 0;
    
    // 6 // Take an input from user about the size of array.
    // P //
    printf("\nEnter size of an array: ");
    scanf("%d", &size);
    
    // 7 // Now ask the user to enter the elements in an array. Loop is used to store numbers into an array and i is used as an Index value.
    // P //
    printf("\nEnter elements of an array:\n");
    for(i=0; i<size; i++)
        scanf("%d", &numbers[i]);
    
    // 8 // Now ask the user about the Location where the number has to be deleted.
    // P //
    printf("\nEnter location of deletion: ");
    scanf("%d", &loc);
    
    // 9 // Call the function "delete"
    // P //
    delete();
    
    // 10 // Now again in the Main block after the function calling we will print the array.
    // P //
    printf("\n\nAfter deletion:\n");
    for(i=0; i<size; i++)
        printf("\n%d", numbers[i]);
    
    
    return 0;
}

// 11 // Now we will come out of the Main block and Define our function.
// P // void delete() { }
void delete()
{
    // 12 // Initialise i.
    // P //
    int i;
    
    // 13 // Initialise item to the element at the index provided by User.
    // P //
    item = numbers[loc-1];
    
    // 14 // Looping through the location provided to the last index and moving the elements ahead.
    // P //
    for(i=loc-1; i<size; i++)
        numbers[i] = numbers[i+1];
    
    // 15 //At last we are decrementing the size because after deletion the size of the array is decremented and displaying the message that item is deleted.
    // P //
    size--;
    printf("\nITEM deleted: %d", item);
}

